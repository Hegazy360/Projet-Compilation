Terminals unused in grammar

   DE


Grammar

    0 $accept: programme $end

    1 programme: PROG corps

    2 corps: liste_declarations liste_instructions
    3      | liste_instructions

    4 liste_declarations: declaration
    5                   | declaration POINT_VIRGULE liste_declarations

    6 liste_instructions: DEBUT suite_liste_inst FIN

    7 suite_liste_inst: instruction POINT_VIRGULE
    8                 | suite_liste_inst instruction POINT_VIRGULE

    9 declaration: declaration_type
   10            | declaration_variable
   11            | declaration_procedure
   12            | declaration_fonction

   13 declaration_type: TYPE IDF DEUX_POINTS suite_declaration_type

   14 suite_declaration_type: STRUCT liste_champs FSTRUCT
   15                       | TABLEAU dimension DEUX_POINTS nom_type

   16 dimension: CROCHET_OUVRANT liste_dimensions CROCHET_FERMANT

   17 liste_dimensions: une_dimension
   18                 | liste_dimensions VIRGULE une_dimension

   19 une_dimension: expression POINT POINT expression

   20 liste_champs: un_champ
   21             | liste_champs POINT_VIRGULE un_champ

   22 un_champ: IDF DEUX_POINTS nom_type

   23 nom_type: type_simple
   24         | IDF

   25 type_simple: ENTIER
   26            | REEL
   27            | BOOLEEN
   28            | CARACTERE
   29            | CHAINE CROCHET_OUVRANT CSTE_ENTIERE CROCHET_FERMANT

   30 declaration_variable: VARIABLE IDF DEUX_POINTS nom_type

   31 declaration_procedure: PROCEDURE IDF liste_parametres corps

   32 declaration_fonction: FONCTION IDF liste_parametres RETOURNE type_simple corps

   33 liste_parametres: %empty
   34                 | PARENTHESE_OUVRANTE liste_param PARENTHESE_FERMANTE

   35 liste_param: un_param
   36            | liste_param POINT_VIRGULE un_param

   37 un_param: IDF DEUX_POINTS type_simple

   38 instruction: affectation
   39            | condition
   40            | tant_que
   41            | appel
   42            | appel PLUS expression
   43            | appel MULT expression
   44            | appel DIV expression
   45            | appel MOINS expression
   46            | VIDE
   47            | RETOURNE resultat_retourne

   48 resultat_retourne: %empty
   49                  | expression

   50 appel: IDF liste_arguments

   51 liste_arguments: %empty
   52                | PARENTHESE_OUVRANTE liste_args PARENTHESE_FERMANTE

   53 liste_args: un_arg
   54           | liste_args VIRGULE un_arg

   55 un_arg: IDF
   56       | expression

   57 condition: SI exprel ALORS liste_instructions SINON liste_instructions

   58 tant_que: TANT_QUE expression FAIRE liste_instructions

   59 affectation: variable OPAFF expression

   60 expression: exparith
   61           | exprel

   62 variable: IDF
   63         | IDF CROCHET_OUVRANT exparith CROCHET_FERMANT
   64         | IDF CROCHET_OUVRANT IDF CROCHET_FERMANT
   65         | IDF CROCHET_OUVRANT IDF CROCHET_FERMANT POINT IDF

   66 exparith: e1
   67         | IDF MULT e1
   68         | IDF DIV e1
   69         | IDF MOINS e1

   70 e1: e1 PLUS e2
   71   | e1 MOINS e2
   72   | e2

   73 e2: e2 MULT e3
   74   | e2 DIV e3
   75   | e3

   76 e3: PARENTHESE_OUVRANTE e1 PARENTHESE_FERMANTE
   77   | CSTE_ENTIERE
   78   | CSTE_REEL

   79 exprel: exparith OP_COMP exparith


Terminals, with rules where they appear

$end (0) 0
error (256)
PROG (258) 1
DEBUT (259) 6
FIN (260) 6
STRUCT (261) 14
FSTRUCT (262) 14
TABLEAU (263) 15
DE (264)
VARIABLE (265) 30
PROCEDURE (266) 31
FONCTION (267) 32
RETOURNE (268) 32 47
VIDE (269) 46
POINT_VIRGULE (270) 5 7 8 21 36
DEUX_POINTS (271) 13 15 22 30 37
POINT (272) 19 65
CROCHET_OUVRANT (273) 16 29 63 64 65
CROCHET_FERMANT (274) 16 29 63 64 65
VIRGULE (275) 18 54
PARENTHESE_OUVRANTE (276) 34 52 76
PARENTHESE_FERMANTE (277) 34 52 76
TYPE (278) 13
IDF (279) 13 22 24 30 31 32 37 50 55 62 63 64 65 67 68 69
ENTIER (280) 25
REEL (281) 26
BOOLEEN (282) 27
CARACTERE (283) 28
CHAINE (284) 29
CSTE_ENTIERE (285) 29 77
CSTE_REEL (286) 78
SI (287) 57
ALORS (288) 57
SINON (289) 57
TANT_QUE (290) 58
FAIRE (291) 58
OPAFF (292) 59
PLUS (293) 42 70
MOINS (294) 45 69 71
MULT (295) 43 67 73
DIV (296) 44 68 74
OP_COMP (297) 79


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
programme (44)
    on left: 1, on right: 0
corps (45)
    on left: 2 3, on right: 1 31 32
liste_declarations (46)
    on left: 4 5, on right: 2 5
liste_instructions (47)
    on left: 6, on right: 2 3 57 58
suite_liste_inst (48)
    on left: 7 8, on right: 6 8
declaration (49)
    on left: 9 10 11 12, on right: 4 5
declaration_type (50)
    on left: 13, on right: 9
suite_declaration_type (51)
    on left: 14 15, on right: 13
dimension (52)
    on left: 16, on right: 15
liste_dimensions (53)
    on left: 17 18, on right: 16 18
une_dimension (54)
    on left: 19, on right: 17 18
liste_champs (55)
    on left: 20 21, on right: 14 21
un_champ (56)
    on left: 22, on right: 20 21
nom_type (57)
    on left: 23 24, on right: 15 22 30
type_simple (58)
    on left: 25 26 27 28 29, on right: 23 32 37
declaration_variable (59)
    on left: 30, on right: 10
declaration_procedure (60)
    on left: 31, on right: 11
declaration_fonction (61)
    on left: 32, on right: 12
liste_parametres (62)
    on left: 33 34, on right: 31 32
liste_param (63)
    on left: 35 36, on right: 34 36
un_param (64)
    on left: 37, on right: 35 36
instruction (65)
    on left: 38 39 40 41 42 43 44 45 46 47, on right: 7 8
resultat_retourne (66)
    on left: 48 49, on right: 47
appel (67)
    on left: 50, on right: 41 42 43 44 45
liste_arguments (68)
    on left: 51 52, on right: 50
liste_args (69)
    on left: 53 54, on right: 52 54
un_arg (70)
    on left: 55 56, on right: 53 54
condition (71)
    on left: 57, on right: 39
tant_que (72)
    on left: 58, on right: 40
affectation (73)
    on left: 59, on right: 38
expression (74)
    on left: 60 61, on right: 19 42 43 44 45 49 56 58 59
variable (75)
    on left: 62 63 64 65, on right: 59
exparith (76)
    on left: 66 67 68 69, on right: 60 63 79
e1 (77)
    on left: 70 71 72, on right: 66 67 68 69 70 71 76
e2 (78)
    on left: 73 74 75, on right: 70 71 72 73 74
e3 (79)
    on left: 76 77 78, on right: 73 74 75
exprel (80)
    on left: 79, on right: 57 61


State 0

    0 $accept: . programme $end

    PROG  shift, and go to state 1

    programme  go to state 2


State 1

    1 programme: PROG . corps

    DEBUT      shift, and go to state 3
    VARIABLE   shift, and go to state 4
    PROCEDURE  shift, and go to state 5
    FONCTION   shift, and go to state 6
    TYPE       shift, and go to state 7

    corps                  go to state 8
    liste_declarations     go to state 9
    liste_instructions     go to state 10
    declaration            go to state 11
    declaration_type       go to state 12
    declaration_variable   go to state 13
    declaration_procedure  go to state 14
    declaration_fonction   go to state 15


State 2

    0 $accept: programme . $end

    $end  shift, and go to state 16


State 3

    6 liste_instructions: DEBUT . suite_liste_inst FIN

    RETOURNE  shift, and go to state 17
    VIDE      shift, and go to state 18
    IDF       shift, and go to state 19
    SI        shift, and go to state 20
    TANT_QUE  shift, and go to state 21

    suite_liste_inst  go to state 22
    instruction       go to state 23
    appel             go to state 24
    condition         go to state 25
    tant_que          go to state 26
    affectation       go to state 27
    variable          go to state 28


State 4

   30 declaration_variable: VARIABLE . IDF DEUX_POINTS nom_type

    IDF  shift, and go to state 29


State 5

   31 declaration_procedure: PROCEDURE . IDF liste_parametres corps

    IDF  shift, and go to state 30


State 6

   32 declaration_fonction: FONCTION . IDF liste_parametres RETOURNE type_simple corps

    IDF  shift, and go to state 31


State 7

   13 declaration_type: TYPE . IDF DEUX_POINTS suite_declaration_type

    IDF  shift, and go to state 32


State 8

    1 programme: PROG corps .

    $default  reduce using rule 1 (programme)


State 9

    2 corps: liste_declarations . liste_instructions

    DEBUT  shift, and go to state 3

    liste_instructions  go to state 33


State 10

    3 corps: liste_instructions .

    $default  reduce using rule 3 (corps)


State 11

    4 liste_declarations: declaration .
    5                   | declaration . POINT_VIRGULE liste_declarations

    POINT_VIRGULE  shift, and go to state 34

    $default  reduce using rule 4 (liste_declarations)


State 12

    9 declaration: declaration_type .

    $default  reduce using rule 9 (declaration)


State 13

   10 declaration: declaration_variable .

    $default  reduce using rule 10 (declaration)


State 14

   11 declaration: declaration_procedure .

    $default  reduce using rule 11 (declaration)


State 15

   12 declaration: declaration_fonction .

    $default  reduce using rule 12 (declaration)


State 16

    0 $accept: programme $end .

    $default  accept


State 17

   47 instruction: RETOURNE . resultat_retourne

    PARENTHESE_OUVRANTE  shift, and go to state 35
    IDF                  shift, and go to state 36
    CSTE_ENTIERE         shift, and go to state 37
    CSTE_REEL            shift, and go to state 38

    $default  reduce using rule 48 (resultat_retourne)

    resultat_retourne  go to state 39
    expression         go to state 40
    exparith           go to state 41
    e1                 go to state 42
    e2                 go to state 43
    e3                 go to state 44
    exprel             go to state 45


State 18

   46 instruction: VIDE .

    $default  reduce using rule 46 (instruction)


State 19

   50 appel: IDF . liste_arguments
   62 variable: IDF .
   63         | IDF . CROCHET_OUVRANT exparith CROCHET_FERMANT
   64         | IDF . CROCHET_OUVRANT IDF CROCHET_FERMANT
   65         | IDF . CROCHET_OUVRANT IDF CROCHET_FERMANT POINT IDF

    CROCHET_OUVRANT      shift, and go to state 46
    PARENTHESE_OUVRANTE  shift, and go to state 47

    OPAFF     reduce using rule 62 (variable)
    $default  reduce using rule 51 (liste_arguments)

    liste_arguments  go to state 48


State 20

   57 condition: SI . exprel ALORS liste_instructions SINON liste_instructions

    PARENTHESE_OUVRANTE  shift, and go to state 35
    IDF                  shift, and go to state 36
    CSTE_ENTIERE         shift, and go to state 37
    CSTE_REEL            shift, and go to state 38

    exparith  go to state 49
    e1        go to state 42
    e2        go to state 43
    e3        go to state 44
    exprel    go to state 50


State 21

   58 tant_que: TANT_QUE . expression FAIRE liste_instructions

    PARENTHESE_OUVRANTE  shift, and go to state 35
    IDF                  shift, and go to state 36
    CSTE_ENTIERE         shift, and go to state 37
    CSTE_REEL            shift, and go to state 38

    expression  go to state 51
    exparith    go to state 41
    e1          go to state 42
    e2          go to state 43
    e3          go to state 44
    exprel      go to state 45


State 22

    6 liste_instructions: DEBUT suite_liste_inst . FIN
    8 suite_liste_inst: suite_liste_inst . instruction POINT_VIRGULE

    FIN       shift, and go to state 52
    RETOURNE  shift, and go to state 17
    VIDE      shift, and go to state 18
    IDF       shift, and go to state 19
    SI        shift, and go to state 20
    TANT_QUE  shift, and go to state 21

    instruction  go to state 53
    appel        go to state 24
    condition    go to state 25
    tant_que     go to state 26
    affectation  go to state 27
    variable     go to state 28


State 23

    7 suite_liste_inst: instruction . POINT_VIRGULE

    POINT_VIRGULE  shift, and go to state 54


State 24

   41 instruction: appel .
   42            | appel . PLUS expression
   43            | appel . MULT expression
   44            | appel . DIV expression
   45            | appel . MOINS expression

    PLUS   shift, and go to state 55
    MOINS  shift, and go to state 56
    MULT   shift, and go to state 57
    DIV    shift, and go to state 58

    $default  reduce using rule 41 (instruction)


State 25

   39 instruction: condition .

    $default  reduce using rule 39 (instruction)


State 26

   40 instruction: tant_que .

    $default  reduce using rule 40 (instruction)


State 27

   38 instruction: affectation .

    $default  reduce using rule 38 (instruction)


State 28

   59 affectation: variable . OPAFF expression

    OPAFF  shift, and go to state 59


State 29

   30 declaration_variable: VARIABLE IDF . DEUX_POINTS nom_type

    DEUX_POINTS  shift, and go to state 60


State 30

   31 declaration_procedure: PROCEDURE IDF . liste_parametres corps

    PARENTHESE_OUVRANTE  shift, and go to state 61

    $default  reduce using rule 33 (liste_parametres)

    liste_parametres  go to state 62


State 31

   32 declaration_fonction: FONCTION IDF . liste_parametres RETOURNE type_simple corps

    PARENTHESE_OUVRANTE  shift, and go to state 61

    $default  reduce using rule 33 (liste_parametres)

    liste_parametres  go to state 63


State 32

   13 declaration_type: TYPE IDF . DEUX_POINTS suite_declaration_type

    DEUX_POINTS  shift, and go to state 64


State 33

    2 corps: liste_declarations liste_instructions .

    $default  reduce using rule 2 (corps)


State 34

    5 liste_declarations: declaration POINT_VIRGULE . liste_declarations

    VARIABLE   shift, and go to state 4
    PROCEDURE  shift, and go to state 5
    FONCTION   shift, and go to state 6
    TYPE       shift, and go to state 7

    liste_declarations     go to state 65
    declaration            go to state 11
    declaration_type       go to state 12
    declaration_variable   go to state 13
    declaration_procedure  go to state 14
    declaration_fonction   go to state 15


State 35

   76 e3: PARENTHESE_OUVRANTE . e1 PARENTHESE_FERMANTE

    PARENTHESE_OUVRANTE  shift, and go to state 35
    CSTE_ENTIERE         shift, and go to state 37
    CSTE_REEL            shift, and go to state 38

    e1  go to state 66
    e2  go to state 43
    e3  go to state 44


State 36

   67 exparith: IDF . MULT e1
   68         | IDF . DIV e1
   69         | IDF . MOINS e1

    MOINS  shift, and go to state 67
    MULT   shift, and go to state 68
    DIV    shift, and go to state 69


State 37

   77 e3: CSTE_ENTIERE .

    $default  reduce using rule 77 (e3)


State 38

   78 e3: CSTE_REEL .

    $default  reduce using rule 78 (e3)


State 39

   47 instruction: RETOURNE resultat_retourne .

    $default  reduce using rule 47 (instruction)


State 40

   49 resultat_retourne: expression .

    $default  reduce using rule 49 (resultat_retourne)


State 41

   60 expression: exparith .
   79 exprel: exparith . OP_COMP exparith

    OP_COMP  shift, and go to state 70

    $default  reduce using rule 60 (expression)


State 42

   66 exparith: e1 .
   70 e1: e1 . PLUS e2
   71   | e1 . MOINS e2

    PLUS   shift, and go to state 71
    MOINS  shift, and go to state 72

    $default  reduce using rule 66 (exparith)


State 43

   72 e1: e2 .
   73 e2: e2 . MULT e3
   74   | e2 . DIV e3

    MULT  shift, and go to state 73
    DIV   shift, and go to state 74

    $default  reduce using rule 72 (e1)


State 44

   75 e2: e3 .

    $default  reduce using rule 75 (e2)


State 45

   61 expression: exprel .

    $default  reduce using rule 61 (expression)


State 46

   63 variable: IDF CROCHET_OUVRANT . exparith CROCHET_FERMANT
   64         | IDF CROCHET_OUVRANT . IDF CROCHET_FERMANT
   65         | IDF CROCHET_OUVRANT . IDF CROCHET_FERMANT POINT IDF

    PARENTHESE_OUVRANTE  shift, and go to state 35
    IDF                  shift, and go to state 75
    CSTE_ENTIERE         shift, and go to state 37
    CSTE_REEL            shift, and go to state 38

    exparith  go to state 76
    e1        go to state 42
    e2        go to state 43
    e3        go to state 44


State 47

   52 liste_arguments: PARENTHESE_OUVRANTE . liste_args PARENTHESE_FERMANTE

    PARENTHESE_OUVRANTE  shift, and go to state 35
    IDF                  shift, and go to state 77
    CSTE_ENTIERE         shift, and go to state 37
    CSTE_REEL            shift, and go to state 38

    liste_args  go to state 78
    un_arg      go to state 79
    expression  go to state 80
    exparith    go to state 41
    e1          go to state 42
    e2          go to state 43
    e3          go to state 44
    exprel      go to state 45


State 48

   50 appel: IDF liste_arguments .

    $default  reduce using rule 50 (appel)


State 49

   79 exprel: exparith . OP_COMP exparith

    OP_COMP  shift, and go to state 70


State 50

   57 condition: SI exprel . ALORS liste_instructions SINON liste_instructions

    ALORS  shift, and go to state 81


State 51

   58 tant_que: TANT_QUE expression . FAIRE liste_instructions

    FAIRE  shift, and go to state 82


State 52

    6 liste_instructions: DEBUT suite_liste_inst FIN .

    $default  reduce using rule 6 (liste_instructions)


State 53

    8 suite_liste_inst: suite_liste_inst instruction . POINT_VIRGULE

    POINT_VIRGULE  shift, and go to state 83


State 54

    7 suite_liste_inst: instruction POINT_VIRGULE .

    $default  reduce using rule 7 (suite_liste_inst)


State 55

   42 instruction: appel PLUS . expression

    PARENTHESE_OUVRANTE  shift, and go to state 35
    IDF                  shift, and go to state 36
    CSTE_ENTIERE         shift, and go to state 37
    CSTE_REEL            shift, and go to state 38

    expression  go to state 84
    exparith    go to state 41
    e1          go to state 42
    e2          go to state 43
    e3          go to state 44
    exprel      go to state 45


State 56

   45 instruction: appel MOINS . expression

    PARENTHESE_OUVRANTE  shift, and go to state 35
    IDF                  shift, and go to state 36
    CSTE_ENTIERE         shift, and go to state 37
    CSTE_REEL            shift, and go to state 38

    expression  go to state 85
    exparith    go to state 41
    e1          go to state 42
    e2          go to state 43
    e3          go to state 44
    exprel      go to state 45


State 57

   43 instruction: appel MULT . expression

    PARENTHESE_OUVRANTE  shift, and go to state 35
    IDF                  shift, and go to state 36
    CSTE_ENTIERE         shift, and go to state 37
    CSTE_REEL            shift, and go to state 38

    expression  go to state 86
    exparith    go to state 41
    e1          go to state 42
    e2          go to state 43
    e3          go to state 44
    exprel      go to state 45


State 58

   44 instruction: appel DIV . expression

    PARENTHESE_OUVRANTE  shift, and go to state 35
    IDF                  shift, and go to state 36
    CSTE_ENTIERE         shift, and go to state 37
    CSTE_REEL            shift, and go to state 38

    expression  go to state 87
    exparith    go to state 41
    e1          go to state 42
    e2          go to state 43
    e3          go to state 44
    exprel      go to state 45


State 59

   59 affectation: variable OPAFF . expression

    PARENTHESE_OUVRANTE  shift, and go to state 35
    IDF                  shift, and go to state 36
    CSTE_ENTIERE         shift, and go to state 37
    CSTE_REEL            shift, and go to state 38

    expression  go to state 88
    exparith    go to state 41
    e1          go to state 42
    e2          go to state 43
    e3          go to state 44
    exprel      go to state 45


State 60

   30 declaration_variable: VARIABLE IDF DEUX_POINTS . nom_type

    IDF        shift, and go to state 89
    ENTIER     shift, and go to state 90
    REEL       shift, and go to state 91
    BOOLEEN    shift, and go to state 92
    CARACTERE  shift, and go to state 93
    CHAINE     shift, and go to state 94

    nom_type     go to state 95
    type_simple  go to state 96


State 61

   34 liste_parametres: PARENTHESE_OUVRANTE . liste_param PARENTHESE_FERMANTE

    IDF  shift, and go to state 97

    liste_param  go to state 98
    un_param     go to state 99


State 62

   31 declaration_procedure: PROCEDURE IDF liste_parametres . corps

    DEBUT      shift, and go to state 3
    VARIABLE   shift, and go to state 4
    PROCEDURE  shift, and go to state 5
    FONCTION   shift, and go to state 6
    TYPE       shift, and go to state 7

    corps                  go to state 100
    liste_declarations     go to state 9
    liste_instructions     go to state 10
    declaration            go to state 11
    declaration_type       go to state 12
    declaration_variable   go to state 13
    declaration_procedure  go to state 14
    declaration_fonction   go to state 15


State 63

   32 declaration_fonction: FONCTION IDF liste_parametres . RETOURNE type_simple corps

    RETOURNE  shift, and go to state 101


State 64

   13 declaration_type: TYPE IDF DEUX_POINTS . suite_declaration_type

    STRUCT   shift, and go to state 102
    TABLEAU  shift, and go to state 103

    suite_declaration_type  go to state 104


State 65

    5 liste_declarations: declaration POINT_VIRGULE liste_declarations .

    $default  reduce using rule 5 (liste_declarations)


State 66

   70 e1: e1 . PLUS e2
   71   | e1 . MOINS e2
   76 e3: PARENTHESE_OUVRANTE e1 . PARENTHESE_FERMANTE

    PARENTHESE_FERMANTE  shift, and go to state 105
    PLUS                 shift, and go to state 71
    MOINS                shift, and go to state 72


State 67

   69 exparith: IDF MOINS . e1

    PARENTHESE_OUVRANTE  shift, and go to state 35
    CSTE_ENTIERE         shift, and go to state 37
    CSTE_REEL            shift, and go to state 38

    e1  go to state 106
    e2  go to state 43
    e3  go to state 44


State 68

   67 exparith: IDF MULT . e1

    PARENTHESE_OUVRANTE  shift, and go to state 35
    CSTE_ENTIERE         shift, and go to state 37
    CSTE_REEL            shift, and go to state 38

    e1  go to state 107
    e2  go to state 43
    e3  go to state 44


State 69

   68 exparith: IDF DIV . e1

    PARENTHESE_OUVRANTE  shift, and go to state 35
    CSTE_ENTIERE         shift, and go to state 37
    CSTE_REEL            shift, and go to state 38

    e1  go to state 108
    e2  go to state 43
    e3  go to state 44


State 70

   79 exprel: exparith OP_COMP . exparith

    PARENTHESE_OUVRANTE  shift, and go to state 35
    IDF                  shift, and go to state 36
    CSTE_ENTIERE         shift, and go to state 37
    CSTE_REEL            shift, and go to state 38

    exparith  go to state 109
    e1        go to state 42
    e2        go to state 43
    e3        go to state 44


State 71

   70 e1: e1 PLUS . e2

    PARENTHESE_OUVRANTE  shift, and go to state 35
    CSTE_ENTIERE         shift, and go to state 37
    CSTE_REEL            shift, and go to state 38

    e2  go to state 110
    e3  go to state 44


State 72

   71 e1: e1 MOINS . e2

    PARENTHESE_OUVRANTE  shift, and go to state 35
    CSTE_ENTIERE         shift, and go to state 37
    CSTE_REEL            shift, and go to state 38

    e2  go to state 111
    e3  go to state 44


State 73

   73 e2: e2 MULT . e3

    PARENTHESE_OUVRANTE  shift, and go to state 35
    CSTE_ENTIERE         shift, and go to state 37
    CSTE_REEL            shift, and go to state 38

    e3  go to state 112


State 74

   74 e2: e2 DIV . e3

    PARENTHESE_OUVRANTE  shift, and go to state 35
    CSTE_ENTIERE         shift, and go to state 37
    CSTE_REEL            shift, and go to state 38

    e3  go to state 113


State 75

   64 variable: IDF CROCHET_OUVRANT IDF . CROCHET_FERMANT
   65         | IDF CROCHET_OUVRANT IDF . CROCHET_FERMANT POINT IDF
   67 exparith: IDF . MULT e1
   68         | IDF . DIV e1
   69         | IDF . MOINS e1

    CROCHET_FERMANT  shift, and go to state 114
    MOINS            shift, and go to state 67
    MULT             shift, and go to state 68
    DIV              shift, and go to state 69


State 76

   63 variable: IDF CROCHET_OUVRANT exparith . CROCHET_FERMANT

    CROCHET_FERMANT  shift, and go to state 115


State 77

   55 un_arg: IDF .
   67 exparith: IDF . MULT e1
   68         | IDF . DIV e1
   69         | IDF . MOINS e1

    MOINS  shift, and go to state 67
    MULT   shift, and go to state 68
    DIV    shift, and go to state 69

    $default  reduce using rule 55 (un_arg)


State 78

   52 liste_arguments: PARENTHESE_OUVRANTE liste_args . PARENTHESE_FERMANTE
   54 liste_args: liste_args . VIRGULE un_arg

    VIRGULE              shift, and go to state 116
    PARENTHESE_FERMANTE  shift, and go to state 117


State 79

   53 liste_args: un_arg .

    $default  reduce using rule 53 (liste_args)


State 80

   56 un_arg: expression .

    $default  reduce using rule 56 (un_arg)


State 81

   57 condition: SI exprel ALORS . liste_instructions SINON liste_instructions

    DEBUT  shift, and go to state 3

    liste_instructions  go to state 118


State 82

   58 tant_que: TANT_QUE expression FAIRE . liste_instructions

    DEBUT  shift, and go to state 3

    liste_instructions  go to state 119


State 83

    8 suite_liste_inst: suite_liste_inst instruction POINT_VIRGULE .

    $default  reduce using rule 8 (suite_liste_inst)


State 84

   42 instruction: appel PLUS expression .

    $default  reduce using rule 42 (instruction)


State 85

   45 instruction: appel MOINS expression .

    $default  reduce using rule 45 (instruction)


State 86

   43 instruction: appel MULT expression .

    $default  reduce using rule 43 (instruction)


State 87

   44 instruction: appel DIV expression .

    $default  reduce using rule 44 (instruction)


State 88

   59 affectation: variable OPAFF expression .

    $default  reduce using rule 59 (affectation)


State 89

   24 nom_type: IDF .

    $default  reduce using rule 24 (nom_type)


State 90

   25 type_simple: ENTIER .

    $default  reduce using rule 25 (type_simple)


State 91

   26 type_simple: REEL .

    $default  reduce using rule 26 (type_simple)


State 92

   27 type_simple: BOOLEEN .

    $default  reduce using rule 27 (type_simple)


State 93

   28 type_simple: CARACTERE .

    $default  reduce using rule 28 (type_simple)


State 94

   29 type_simple: CHAINE . CROCHET_OUVRANT CSTE_ENTIERE CROCHET_FERMANT

    CROCHET_OUVRANT  shift, and go to state 120


State 95

   30 declaration_variable: VARIABLE IDF DEUX_POINTS nom_type .

    $default  reduce using rule 30 (declaration_variable)


State 96

   23 nom_type: type_simple .

    $default  reduce using rule 23 (nom_type)


State 97

   37 un_param: IDF . DEUX_POINTS type_simple

    DEUX_POINTS  shift, and go to state 121


State 98

   34 liste_parametres: PARENTHESE_OUVRANTE liste_param . PARENTHESE_FERMANTE
   36 liste_param: liste_param . POINT_VIRGULE un_param

    POINT_VIRGULE        shift, and go to state 122
    PARENTHESE_FERMANTE  shift, and go to state 123


State 99

   35 liste_param: un_param .

    $default  reduce using rule 35 (liste_param)


State 100

   31 declaration_procedure: PROCEDURE IDF liste_parametres corps .

    $default  reduce using rule 31 (declaration_procedure)


State 101

   32 declaration_fonction: FONCTION IDF liste_parametres RETOURNE . type_simple corps

    ENTIER     shift, and go to state 90
    REEL       shift, and go to state 91
    BOOLEEN    shift, and go to state 92
    CARACTERE  shift, and go to state 93
    CHAINE     shift, and go to state 94

    type_simple  go to state 124


State 102

   14 suite_declaration_type: STRUCT . liste_champs FSTRUCT

    IDF  shift, and go to state 125

    liste_champs  go to state 126
    un_champ      go to state 127


State 103

   15 suite_declaration_type: TABLEAU . dimension DEUX_POINTS nom_type

    CROCHET_OUVRANT  shift, and go to state 128

    dimension  go to state 129


State 104

   13 declaration_type: TYPE IDF DEUX_POINTS suite_declaration_type .

    $default  reduce using rule 13 (declaration_type)


State 105

   76 e3: PARENTHESE_OUVRANTE e1 PARENTHESE_FERMANTE .

    $default  reduce using rule 76 (e3)


State 106

   69 exparith: IDF MOINS e1 .
   70 e1: e1 . PLUS e2
   71   | e1 . MOINS e2

    PLUS   shift, and go to state 71
    MOINS  shift, and go to state 72

    $default  reduce using rule 69 (exparith)


State 107

   67 exparith: IDF MULT e1 .
   70 e1: e1 . PLUS e2
   71   | e1 . MOINS e2

    PLUS   shift, and go to state 71
    MOINS  shift, and go to state 72

    $default  reduce using rule 67 (exparith)


State 108

   68 exparith: IDF DIV e1 .
   70 e1: e1 . PLUS e2
   71   | e1 . MOINS e2

    PLUS   shift, and go to state 71
    MOINS  shift, and go to state 72

    $default  reduce using rule 68 (exparith)


State 109

   79 exprel: exparith OP_COMP exparith .

    $default  reduce using rule 79 (exprel)


State 110

   70 e1: e1 PLUS e2 .
   73 e2: e2 . MULT e3
   74   | e2 . DIV e3

    MULT  shift, and go to state 73
    DIV   shift, and go to state 74

    $default  reduce using rule 70 (e1)


State 111

   71 e1: e1 MOINS e2 .
   73 e2: e2 . MULT e3
   74   | e2 . DIV e3

    MULT  shift, and go to state 73
    DIV   shift, and go to state 74

    $default  reduce using rule 71 (e1)


State 112

   73 e2: e2 MULT e3 .

    $default  reduce using rule 73 (e2)


State 113

   74 e2: e2 DIV e3 .

    $default  reduce using rule 74 (e2)


State 114

   64 variable: IDF CROCHET_OUVRANT IDF CROCHET_FERMANT .
   65         | IDF CROCHET_OUVRANT IDF CROCHET_FERMANT . POINT IDF

    POINT  shift, and go to state 130

    $default  reduce using rule 64 (variable)


State 115

   63 variable: IDF CROCHET_OUVRANT exparith CROCHET_FERMANT .

    $default  reduce using rule 63 (variable)


State 116

   54 liste_args: liste_args VIRGULE . un_arg

    PARENTHESE_OUVRANTE  shift, and go to state 35
    IDF                  shift, and go to state 77
    CSTE_ENTIERE         shift, and go to state 37
    CSTE_REEL            shift, and go to state 38

    un_arg      go to state 131
    expression  go to state 80
    exparith    go to state 41
    e1          go to state 42
    e2          go to state 43
    e3          go to state 44
    exprel      go to state 45


State 117

   52 liste_arguments: PARENTHESE_OUVRANTE liste_args PARENTHESE_FERMANTE .

    $default  reduce using rule 52 (liste_arguments)


State 118

   57 condition: SI exprel ALORS liste_instructions . SINON liste_instructions

    SINON  shift, and go to state 132


State 119

   58 tant_que: TANT_QUE expression FAIRE liste_instructions .

    $default  reduce using rule 58 (tant_que)


State 120

   29 type_simple: CHAINE CROCHET_OUVRANT . CSTE_ENTIERE CROCHET_FERMANT

    CSTE_ENTIERE  shift, and go to state 133


State 121

   37 un_param: IDF DEUX_POINTS . type_simple

    ENTIER     shift, and go to state 90
    REEL       shift, and go to state 91
    BOOLEEN    shift, and go to state 92
    CARACTERE  shift, and go to state 93
    CHAINE     shift, and go to state 94

    type_simple  go to state 134


State 122

   36 liste_param: liste_param POINT_VIRGULE . un_param

    IDF  shift, and go to state 97

    un_param  go to state 135


State 123

   34 liste_parametres: PARENTHESE_OUVRANTE liste_param PARENTHESE_FERMANTE .

    $default  reduce using rule 34 (liste_parametres)


State 124

   32 declaration_fonction: FONCTION IDF liste_parametres RETOURNE type_simple . corps

    DEBUT      shift, and go to state 3
    VARIABLE   shift, and go to state 4
    PROCEDURE  shift, and go to state 5
    FONCTION   shift, and go to state 6
    TYPE       shift, and go to state 7

    corps                  go to state 136
    liste_declarations     go to state 9
    liste_instructions     go to state 10
    declaration            go to state 11
    declaration_type       go to state 12
    declaration_variable   go to state 13
    declaration_procedure  go to state 14
    declaration_fonction   go to state 15


State 125

   22 un_champ: IDF . DEUX_POINTS nom_type

    DEUX_POINTS  shift, and go to state 137


State 126

   14 suite_declaration_type: STRUCT liste_champs . FSTRUCT
   21 liste_champs: liste_champs . POINT_VIRGULE un_champ

    FSTRUCT        shift, and go to state 138
    POINT_VIRGULE  shift, and go to state 139


State 127

   20 liste_champs: un_champ .

    $default  reduce using rule 20 (liste_champs)


State 128

   16 dimension: CROCHET_OUVRANT . liste_dimensions CROCHET_FERMANT

    PARENTHESE_OUVRANTE  shift, and go to state 35
    IDF                  shift, and go to state 36
    CSTE_ENTIERE         shift, and go to state 37
    CSTE_REEL            shift, and go to state 38

    liste_dimensions  go to state 140
    une_dimension     go to state 141
    expression        go to state 142
    exparith          go to state 41
    e1                go to state 42
    e2                go to state 43
    e3                go to state 44
    exprel            go to state 45


State 129

   15 suite_declaration_type: TABLEAU dimension . DEUX_POINTS nom_type

    DEUX_POINTS  shift, and go to state 143


State 130

   65 variable: IDF CROCHET_OUVRANT IDF CROCHET_FERMANT POINT . IDF

    IDF  shift, and go to state 144


State 131

   54 liste_args: liste_args VIRGULE un_arg .

    $default  reduce using rule 54 (liste_args)


State 132

   57 condition: SI exprel ALORS liste_instructions SINON . liste_instructions

    DEBUT  shift, and go to state 3

    liste_instructions  go to state 145


State 133

   29 type_simple: CHAINE CROCHET_OUVRANT CSTE_ENTIERE . CROCHET_FERMANT

    CROCHET_FERMANT  shift, and go to state 146


State 134

   37 un_param: IDF DEUX_POINTS type_simple .

    $default  reduce using rule 37 (un_param)


State 135

   36 liste_param: liste_param POINT_VIRGULE un_param .

    $default  reduce using rule 36 (liste_param)


State 136

   32 declaration_fonction: FONCTION IDF liste_parametres RETOURNE type_simple corps .

    $default  reduce using rule 32 (declaration_fonction)


State 137

   22 un_champ: IDF DEUX_POINTS . nom_type

    IDF        shift, and go to state 89
    ENTIER     shift, and go to state 90
    REEL       shift, and go to state 91
    BOOLEEN    shift, and go to state 92
    CARACTERE  shift, and go to state 93
    CHAINE     shift, and go to state 94

    nom_type     go to state 147
    type_simple  go to state 96


State 138

   14 suite_declaration_type: STRUCT liste_champs FSTRUCT .

    $default  reduce using rule 14 (suite_declaration_type)


State 139

   21 liste_champs: liste_champs POINT_VIRGULE . un_champ

    IDF  shift, and go to state 125

    un_champ  go to state 148


State 140

   16 dimension: CROCHET_OUVRANT liste_dimensions . CROCHET_FERMANT
   18 liste_dimensions: liste_dimensions . VIRGULE une_dimension

    CROCHET_FERMANT  shift, and go to state 149
    VIRGULE          shift, and go to state 150


State 141

   17 liste_dimensions: une_dimension .

    $default  reduce using rule 17 (liste_dimensions)


State 142

   19 une_dimension: expression . POINT POINT expression

    POINT  shift, and go to state 151


State 143

   15 suite_declaration_type: TABLEAU dimension DEUX_POINTS . nom_type

    IDF        shift, and go to state 89
    ENTIER     shift, and go to state 90
    REEL       shift, and go to state 91
    BOOLEEN    shift, and go to state 92
    CARACTERE  shift, and go to state 93
    CHAINE     shift, and go to state 94

    nom_type     go to state 152
    type_simple  go to state 96


State 144

   65 variable: IDF CROCHET_OUVRANT IDF CROCHET_FERMANT POINT IDF .

    $default  reduce using rule 65 (variable)


State 145

   57 condition: SI exprel ALORS liste_instructions SINON liste_instructions .

    $default  reduce using rule 57 (condition)


State 146

   29 type_simple: CHAINE CROCHET_OUVRANT CSTE_ENTIERE CROCHET_FERMANT .

    $default  reduce using rule 29 (type_simple)


State 147

   22 un_champ: IDF DEUX_POINTS nom_type .

    $default  reduce using rule 22 (un_champ)


State 148

   21 liste_champs: liste_champs POINT_VIRGULE un_champ .

    $default  reduce using rule 21 (liste_champs)


State 149

   16 dimension: CROCHET_OUVRANT liste_dimensions CROCHET_FERMANT .

    $default  reduce using rule 16 (dimension)


State 150

   18 liste_dimensions: liste_dimensions VIRGULE . une_dimension

    PARENTHESE_OUVRANTE  shift, and go to state 35
    IDF                  shift, and go to state 36
    CSTE_ENTIERE         shift, and go to state 37
    CSTE_REEL            shift, and go to state 38

    une_dimension  go to state 153
    expression     go to state 142
    exparith       go to state 41
    e1             go to state 42
    e2             go to state 43
    e3             go to state 44
    exprel         go to state 45


State 151

   19 une_dimension: expression POINT . POINT expression

    POINT  shift, and go to state 154


State 152

   15 suite_declaration_type: TABLEAU dimension DEUX_POINTS nom_type .

    $default  reduce using rule 15 (suite_declaration_type)


State 153

   18 liste_dimensions: liste_dimensions VIRGULE une_dimension .

    $default  reduce using rule 18 (liste_dimensions)


State 154

   19 une_dimension: expression POINT POINT . expression

    PARENTHESE_OUVRANTE  shift, and go to state 35
    IDF                  shift, and go to state 36
    CSTE_ENTIERE         shift, and go to state 37
    CSTE_REEL            shift, and go to state 38

    expression  go to state 155
    exparith    go to state 41
    e1          go to state 42
    e2          go to state 43
    e3          go to state 44
    exprel      go to state 45


State 155

   19 une_dimension: expression POINT POINT expression .

    $default  reduce using rule 19 (une_dimension)
