State 17 conflicts: 2 reduce/reduce


Grammar

    0 $accept: programme $end

    1 programme: PROG corps

    2 corps: liste_declarations liste_instructions
    3      | liste_instructions

    4 liste_declarations: declaration
    5                   | liste_declarations POINT_VIRGULE declaration

    6 liste_instructions: DEBUT suite_liste_inst FIN

    7 suite_liste_inst: instruction
    8                 | suite_liste_inst POINT_VIRGULE instruction

    9 declaration: declaration_type
   10            | declaration_variable
   11            | declaration_procedure
   12            | declaration_fonction

   13 declaration_type: TYPE IDF DEUX_POINTS suite_declaration_type

   14 suite_declaration_type: STRUCT liste_champs FSTRUCT
   15                       | TABLEAU dimension DE nom_type

   16 dimension: CROCHET_OUVRANT liste_dimensions CROCHET_FERMANT

   17 liste_dimensions: une_dimension
   18                 | liste_dimensions VIRGULE une_dimension

   19 une_dimension: expression POINT POINT expression

   20 liste_champs: un_champ
   21             | liste_champs POINT_VIRGULE un_champ

   22 un_champ: IDF DEUX_POINTS nom_type

   23 nom_type: type_simple
   24         | IDF

   25 type_simple: ENTIER
   26            | REEL
   27            | BOOLEEN
   28            | CARACTERE
   29            | CHAINE CROCHET_OUVRANT CSTE_ENTIERE CROCHET_FERMANT

   30 declaration_variable: VARIABLE IDF DEUX_POINTS nom_type

   31 declaration_procedure: PROCEDURE IDF liste_parametres corps

   32 declaration_fonction: FONCTION IDF liste_parametres RETOURNE type_simple corps

   33 liste_parametres: %empty
   34                 | PARENTHESE_OUVRANTE liste_param PARENTHESE_FERMANTE

   35 liste_param: un_param
   36            | liste_param POINT_VIRGULE un_param

   37 un_param: IDF DEUX_POINTS type_simple

   38 instruction: affectation
   39            | condition
   40            | tant_que
   41            | appel
   42            | VIDE
   43            | RETOURNE resultat_retourne

   44 resultat_retourne: %empty
   45                  | expression

   46 appel: IDF liste_arguments

   47 liste_arguments: %empty
   48                | PARENTHESE_OUVRANTE liste_args PARENTHESE_FERMANTE

   49 liste_args: un_arg
   50           | liste_args VIRGULE un_arg

   51 un_arg: expression

   52 condition: SI expression ALORS liste_instructions SINON liste_instructions

   53 tant_que: TANT_QUE expression FAIRE liste_instructions

   54 affectation: variable OPAFF expression

   55 variable: IDF
   56         | IDF CROCHET_OUVRANT expression CROCHET_FERMANT

   57 expression: %empty
   58           | IDF
   59           | ENTIER
   60           | REEL
   61           | CARACTERE
   62           | CHAINE
   63           | CHAINE PLUS CHAINE
   64           | ENTIER PLUS ENTIER
   65           | ENTIER MOINS ENTIER
   66           | ENTIER MULT ENTIER
   67           | ENTIER DIV ENTIER
   68           | ENTIER DIFF ENTIER
   69           | REEL PLUS REEL
   70           | REEL MOINS REEL
   71           | REEL MULT REEL
   72           | REEL DIV REEL
   73           | REEL DIFF REEL
   74           | ENTIER EGAL ENTIER
   75           | ENTIER INF_EGAL ENTIER
   76           | ENTIER SUP_EGAL ENTIER
   77           | ENTIER INFERIEUR ENTIER
   78           | ENTIER SUPERIEUR ENTIER
   79           | REEL EGAL REEL
   80           | REEL INF_EGAL REEL
   81           | REEL SUP_EGAL REEL
   82           | REEL INFERIEUR REEL
   83           | REEL SUPERIEUR REEL


Terminals, with rules where they appear

$end (0) 0
error (256)
PROG (258) 1
DEBUT (259) 6
FIN (260) 6
STRUCT (261) 14
FSTRUCT (262) 14
TABLEAU (263) 15
DE (264) 15
VARIABLE (265) 30
PROCEDURE (266) 31
FONCTION (267) 32
RETOURNE (268) 32 43
VIDE (269) 42
POINT_VIRGULE (270) 5 8 21 36
DEUX_POINTS (271) 13 22 30 37
POINT (272) 19
CROCHET_OUVRANT (273) 16 29 56
CROCHET_FERMANT (274) 16 29 56
VIRGULE (275) 18 50
PARENTHESE_OUVRANTE (276) 34 48
PARENTHESE_FERMANTE (277) 34 48
TYPE (278) 13
IDF (279) 13 22 24 30 31 32 37 46 55 56 58
ENTIER (280) 25 59 64 65 66 67 68 74 75 76 77 78
REEL (281) 26 60 69 70 71 72 73 79 80 81 82 83
BOOLEEN (282) 27
CARACTERE (283) 28 61
CHAINE (284) 29 62 63
CSTE_ENTIERE (285) 29
ALORS (286) 52
DIFF (287) 68 73
DIV (288) 67 72
EGAL (289) 74 79
FAIRE (290) 53
INFERIEUR (291) 77 82
INF_EGAL (292) 75 80
MOINS (293) 65 70
MULT (294) 66 71
OPAFF (295) 54
PLUS (296) 63 64 69
SI (297) 52
SINON (298) 52
SUPERIEUR (299) 78 83
SUP_EGAL (300) 76 81
TANT_QUE (301) 53


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
programme (48)
    on left: 1, on right: 0
corps (49)
    on left: 2 3, on right: 1 31 32
liste_declarations (50)
    on left: 4 5, on right: 2 5
liste_instructions (51)
    on left: 6, on right: 2 3 52 53
suite_liste_inst (52)
    on left: 7 8, on right: 6 8
declaration (53)
    on left: 9 10 11 12, on right: 4 5
declaration_type (54)
    on left: 13, on right: 9
suite_declaration_type (55)
    on left: 14 15, on right: 13
dimension (56)
    on left: 16, on right: 15
liste_dimensions (57)
    on left: 17 18, on right: 16 18
une_dimension (58)
    on left: 19, on right: 17 18
liste_champs (59)
    on left: 20 21, on right: 14 21
un_champ (60)
    on left: 22, on right: 20 21
nom_type (61)
    on left: 23 24, on right: 15 22 30
type_simple (62)
    on left: 25 26 27 28 29, on right: 23 32 37
declaration_variable (63)
    on left: 30, on right: 10
declaration_procedure (64)
    on left: 31, on right: 11
declaration_fonction (65)
    on left: 32, on right: 12
liste_parametres (66)
    on left: 33 34, on right: 31 32
liste_param (67)
    on left: 35 36, on right: 34 36
un_param (68)
    on left: 37, on right: 35 36
instruction (69)
    on left: 38 39 40 41 42 43, on right: 7 8
resultat_retourne (70)
    on left: 44 45, on right: 43
appel (71)
    on left: 46, on right: 41
liste_arguments (72)
    on left: 47 48, on right: 46
liste_args (73)
    on left: 49 50, on right: 48 50
un_arg (74)
    on left: 51, on right: 49 50
condition (75)
    on left: 52, on right: 39
tant_que (76)
    on left: 53, on right: 40
affectation (77)
    on left: 54, on right: 38
variable (78)
    on left: 55 56, on right: 54
expression (79)
    on left: 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74
    75 76 77 78 79 80 81 82 83, on right: 19 45 51 52 53 54 56


State 0

    0 $accept: . programme $end

    PROG  shift, and go to state 1

    programme  go to state 2


State 1

    1 programme: PROG . corps

    DEBUT      shift, and go to state 3
    VARIABLE   shift, and go to state 4
    PROCEDURE  shift, and go to state 5
    FONCTION   shift, and go to state 6
    TYPE       shift, and go to state 7

    corps                  go to state 8
    liste_declarations     go to state 9
    liste_instructions     go to state 10
    declaration            go to state 11
    declaration_type       go to state 12
    declaration_variable   go to state 13
    declaration_procedure  go to state 14
    declaration_fonction   go to state 15


State 2

    0 $accept: programme . $end

    $end  shift, and go to state 16


State 3

    6 liste_instructions: DEBUT . suite_liste_inst FIN

    RETOURNE  shift, and go to state 17
    VIDE      shift, and go to state 18
    IDF       shift, and go to state 19
    SI        shift, and go to state 20
    TANT_QUE  shift, and go to state 21

    suite_liste_inst  go to state 22
    instruction       go to state 23
    appel             go to state 24
    condition         go to state 25
    tant_que          go to state 26
    affectation       go to state 27
    variable          go to state 28


State 4

   30 declaration_variable: VARIABLE . IDF DEUX_POINTS nom_type

    IDF  shift, and go to state 29


State 5

   31 declaration_procedure: PROCEDURE . IDF liste_parametres corps

    IDF  shift, and go to state 30


State 6

   32 declaration_fonction: FONCTION . IDF liste_parametres RETOURNE type_simple corps

    IDF  shift, and go to state 31


State 7

   13 declaration_type: TYPE . IDF DEUX_POINTS suite_declaration_type

    IDF  shift, and go to state 32


State 8

    1 programme: PROG corps .

    $default  reduce using rule 1 (programme)


State 9

    2 corps: liste_declarations . liste_instructions
    5 liste_declarations: liste_declarations . POINT_VIRGULE declaration

    DEBUT          shift, and go to state 3
    POINT_VIRGULE  shift, and go to state 33

    liste_instructions  go to state 34


State 10

    3 corps: liste_instructions .

    $default  reduce using rule 3 (corps)


State 11

    4 liste_declarations: declaration .

    $default  reduce using rule 4 (liste_declarations)


State 12

    9 declaration: declaration_type .

    $default  reduce using rule 9 (declaration)


State 13

   10 declaration: declaration_variable .

    $default  reduce using rule 10 (declaration)


State 14

   11 declaration: declaration_procedure .

    $default  reduce using rule 11 (declaration)


State 15

   12 declaration: declaration_fonction .

    $default  reduce using rule 12 (declaration)


State 16

    0 $accept: programme $end .

    $default  accept


State 17

   43 instruction: RETOURNE . resultat_retourne

    IDF        shift, and go to state 35
    ENTIER     shift, and go to state 36
    REEL       shift, and go to state 37
    CARACTERE  shift, and go to state 38
    CHAINE     shift, and go to state 39

    FIN            reduce using rule 44 (resultat_retourne)
    FIN            [reduce using rule 57 (expression)]
    POINT_VIRGULE  reduce using rule 44 (resultat_retourne)
    POINT_VIRGULE  [reduce using rule 57 (expression)]
    $default       reduce using rule 44 (resultat_retourne)

    resultat_retourne  go to state 40
    expression         go to state 41


State 18

   42 instruction: VIDE .

    $default  reduce using rule 42 (instruction)


State 19

   46 appel: IDF . liste_arguments
   55 variable: IDF .
   56         | IDF . CROCHET_OUVRANT expression CROCHET_FERMANT

    CROCHET_OUVRANT      shift, and go to state 42
    PARENTHESE_OUVRANTE  shift, and go to state 43

    OPAFF     reduce using rule 55 (variable)
    $default  reduce using rule 47 (liste_arguments)

    liste_arguments  go to state 44


State 20

   52 condition: SI . expression ALORS liste_instructions SINON liste_instructions

    IDF        shift, and go to state 35
    ENTIER     shift, and go to state 36
    REEL       shift, and go to state 37
    CARACTERE  shift, and go to state 38
    CHAINE     shift, and go to state 39

    $default  reduce using rule 57 (expression)

    expression  go to state 45


State 21

   53 tant_que: TANT_QUE . expression FAIRE liste_instructions

    IDF        shift, and go to state 35
    ENTIER     shift, and go to state 36
    REEL       shift, and go to state 37
    CARACTERE  shift, and go to state 38
    CHAINE     shift, and go to state 39

    $default  reduce using rule 57 (expression)

    expression  go to state 46


State 22

    6 liste_instructions: DEBUT suite_liste_inst . FIN
    8 suite_liste_inst: suite_liste_inst . POINT_VIRGULE instruction

    FIN            shift, and go to state 47
    POINT_VIRGULE  shift, and go to state 48


State 23

    7 suite_liste_inst: instruction .

    $default  reduce using rule 7 (suite_liste_inst)


State 24

   41 instruction: appel .

    $default  reduce using rule 41 (instruction)


State 25

   39 instruction: condition .

    $default  reduce using rule 39 (instruction)


State 26

   40 instruction: tant_que .

    $default  reduce using rule 40 (instruction)


State 27

   38 instruction: affectation .

    $default  reduce using rule 38 (instruction)


State 28

   54 affectation: variable . OPAFF expression

    OPAFF  shift, and go to state 49


State 29

   30 declaration_variable: VARIABLE IDF . DEUX_POINTS nom_type

    DEUX_POINTS  shift, and go to state 50


State 30

   31 declaration_procedure: PROCEDURE IDF . liste_parametres corps

    PARENTHESE_OUVRANTE  shift, and go to state 51

    $default  reduce using rule 33 (liste_parametres)

    liste_parametres  go to state 52


State 31

   32 declaration_fonction: FONCTION IDF . liste_parametres RETOURNE type_simple corps

    PARENTHESE_OUVRANTE  shift, and go to state 51

    $default  reduce using rule 33 (liste_parametres)

    liste_parametres  go to state 53


State 32

   13 declaration_type: TYPE IDF . DEUX_POINTS suite_declaration_type

    DEUX_POINTS  shift, and go to state 54


State 33

    5 liste_declarations: liste_declarations POINT_VIRGULE . declaration

    VARIABLE   shift, and go to state 4
    PROCEDURE  shift, and go to state 5
    FONCTION   shift, and go to state 6
    TYPE       shift, and go to state 7

    declaration            go to state 55
    declaration_type       go to state 12
    declaration_variable   go to state 13
    declaration_procedure  go to state 14
    declaration_fonction   go to state 15


State 34

    2 corps: liste_declarations liste_instructions .

    $default  reduce using rule 2 (corps)


State 35

   58 expression: IDF .

    $default  reduce using rule 58 (expression)


State 36

   59 expression: ENTIER .
   64           | ENTIER . PLUS ENTIER
   65           | ENTIER . MOINS ENTIER
   66           | ENTIER . MULT ENTIER
   67           | ENTIER . DIV ENTIER
   68           | ENTIER . DIFF ENTIER
   74           | ENTIER . EGAL ENTIER
   75           | ENTIER . INF_EGAL ENTIER
   76           | ENTIER . SUP_EGAL ENTIER
   77           | ENTIER . INFERIEUR ENTIER
   78           | ENTIER . SUPERIEUR ENTIER

    DIFF       shift, and go to state 56
    DIV        shift, and go to state 57
    EGAL       shift, and go to state 58
    INFERIEUR  shift, and go to state 59
    INF_EGAL   shift, and go to state 60
    MOINS      shift, and go to state 61
    MULT       shift, and go to state 62
    PLUS       shift, and go to state 63
    SUPERIEUR  shift, and go to state 64
    SUP_EGAL   shift, and go to state 65

    $default  reduce using rule 59 (expression)


State 37

   60 expression: REEL .
   69           | REEL . PLUS REEL
   70           | REEL . MOINS REEL
   71           | REEL . MULT REEL
   72           | REEL . DIV REEL
   73           | REEL . DIFF REEL
   79           | REEL . EGAL REEL
   80           | REEL . INF_EGAL REEL
   81           | REEL . SUP_EGAL REEL
   82           | REEL . INFERIEUR REEL
   83           | REEL . SUPERIEUR REEL

    DIFF       shift, and go to state 66
    DIV        shift, and go to state 67
    EGAL       shift, and go to state 68
    INFERIEUR  shift, and go to state 69
    INF_EGAL   shift, and go to state 70
    MOINS      shift, and go to state 71
    MULT       shift, and go to state 72
    PLUS       shift, and go to state 73
    SUPERIEUR  shift, and go to state 74
    SUP_EGAL   shift, and go to state 75

    $default  reduce using rule 60 (expression)


State 38

   61 expression: CARACTERE .

    $default  reduce using rule 61 (expression)


State 39

   62 expression: CHAINE .
   63           | CHAINE . PLUS CHAINE

    PLUS  shift, and go to state 76

    $default  reduce using rule 62 (expression)


State 40

   43 instruction: RETOURNE resultat_retourne .

    $default  reduce using rule 43 (instruction)


State 41

   45 resultat_retourne: expression .

    $default  reduce using rule 45 (resultat_retourne)


State 42

   56 variable: IDF CROCHET_OUVRANT . expression CROCHET_FERMANT

    IDF        shift, and go to state 35
    ENTIER     shift, and go to state 36
    REEL       shift, and go to state 37
    CARACTERE  shift, and go to state 38
    CHAINE     shift, and go to state 39

    $default  reduce using rule 57 (expression)

    expression  go to state 77


State 43

   48 liste_arguments: PARENTHESE_OUVRANTE . liste_args PARENTHESE_FERMANTE

    IDF        shift, and go to state 35
    ENTIER     shift, and go to state 36
    REEL       shift, and go to state 37
    CARACTERE  shift, and go to state 38
    CHAINE     shift, and go to state 39

    $default  reduce using rule 57 (expression)

    liste_args  go to state 78
    un_arg      go to state 79
    expression  go to state 80


State 44

   46 appel: IDF liste_arguments .

    $default  reduce using rule 46 (appel)


State 45

   52 condition: SI expression . ALORS liste_instructions SINON liste_instructions

    ALORS  shift, and go to state 81


State 46

   53 tant_que: TANT_QUE expression . FAIRE liste_instructions

    FAIRE  shift, and go to state 82


State 47

    6 liste_instructions: DEBUT suite_liste_inst FIN .

    $default  reduce using rule 6 (liste_instructions)


State 48

    8 suite_liste_inst: suite_liste_inst POINT_VIRGULE . instruction

    RETOURNE  shift, and go to state 17
    VIDE      shift, and go to state 18
    IDF       shift, and go to state 19
    SI        shift, and go to state 20
    TANT_QUE  shift, and go to state 21

    instruction  go to state 83
    appel        go to state 24
    condition    go to state 25
    tant_que     go to state 26
    affectation  go to state 27
    variable     go to state 28


State 49

   54 affectation: variable OPAFF . expression

    IDF        shift, and go to state 35
    ENTIER     shift, and go to state 36
    REEL       shift, and go to state 37
    CARACTERE  shift, and go to state 38
    CHAINE     shift, and go to state 39

    $default  reduce using rule 57 (expression)

    expression  go to state 84


State 50

   30 declaration_variable: VARIABLE IDF DEUX_POINTS . nom_type

    IDF        shift, and go to state 85
    ENTIER     shift, and go to state 86
    REEL       shift, and go to state 87
    BOOLEEN    shift, and go to state 88
    CARACTERE  shift, and go to state 89
    CHAINE     shift, and go to state 90

    nom_type     go to state 91
    type_simple  go to state 92


State 51

   34 liste_parametres: PARENTHESE_OUVRANTE . liste_param PARENTHESE_FERMANTE

    IDF  shift, and go to state 93

    liste_param  go to state 94
    un_param     go to state 95


State 52

   31 declaration_procedure: PROCEDURE IDF liste_parametres . corps

    DEBUT      shift, and go to state 3
    VARIABLE   shift, and go to state 4
    PROCEDURE  shift, and go to state 5
    FONCTION   shift, and go to state 6
    TYPE       shift, and go to state 7

    corps                  go to state 96
    liste_declarations     go to state 9
    liste_instructions     go to state 10
    declaration            go to state 11
    declaration_type       go to state 12
    declaration_variable   go to state 13
    declaration_procedure  go to state 14
    declaration_fonction   go to state 15


State 53

   32 declaration_fonction: FONCTION IDF liste_parametres . RETOURNE type_simple corps

    RETOURNE  shift, and go to state 97


State 54

   13 declaration_type: TYPE IDF DEUX_POINTS . suite_declaration_type

    STRUCT   shift, and go to state 98
    TABLEAU  shift, and go to state 99

    suite_declaration_type  go to state 100


State 55

    5 liste_declarations: liste_declarations POINT_VIRGULE declaration .

    $default  reduce using rule 5 (liste_declarations)


State 56

   68 expression: ENTIER DIFF . ENTIER

    ENTIER  shift, and go to state 101


State 57

   67 expression: ENTIER DIV . ENTIER

    ENTIER  shift, and go to state 102


State 58

   74 expression: ENTIER EGAL . ENTIER

    ENTIER  shift, and go to state 103


State 59

   77 expression: ENTIER INFERIEUR . ENTIER

    ENTIER  shift, and go to state 104


State 60

   75 expression: ENTIER INF_EGAL . ENTIER

    ENTIER  shift, and go to state 105


State 61

   65 expression: ENTIER MOINS . ENTIER

    ENTIER  shift, and go to state 106


State 62

   66 expression: ENTIER MULT . ENTIER

    ENTIER  shift, and go to state 107


State 63

   64 expression: ENTIER PLUS . ENTIER

    ENTIER  shift, and go to state 108


State 64

   78 expression: ENTIER SUPERIEUR . ENTIER

    ENTIER  shift, and go to state 109


State 65

   76 expression: ENTIER SUP_EGAL . ENTIER

    ENTIER  shift, and go to state 110


State 66

   73 expression: REEL DIFF . REEL

    REEL  shift, and go to state 111


State 67

   72 expression: REEL DIV . REEL

    REEL  shift, and go to state 112


State 68

   79 expression: REEL EGAL . REEL

    REEL  shift, and go to state 113


State 69

   82 expression: REEL INFERIEUR . REEL

    REEL  shift, and go to state 114


State 70

   80 expression: REEL INF_EGAL . REEL

    REEL  shift, and go to state 115


State 71

   70 expression: REEL MOINS . REEL

    REEL  shift, and go to state 116


State 72

   71 expression: REEL MULT . REEL

    REEL  shift, and go to state 117


State 73

   69 expression: REEL PLUS . REEL

    REEL  shift, and go to state 118


State 74

   83 expression: REEL SUPERIEUR . REEL

    REEL  shift, and go to state 119


State 75

   81 expression: REEL SUP_EGAL . REEL

    REEL  shift, and go to state 120


State 76

   63 expression: CHAINE PLUS . CHAINE

    CHAINE  shift, and go to state 121


State 77

   56 variable: IDF CROCHET_OUVRANT expression . CROCHET_FERMANT

    CROCHET_FERMANT  shift, and go to state 122


State 78

   48 liste_arguments: PARENTHESE_OUVRANTE liste_args . PARENTHESE_FERMANTE
   50 liste_args: liste_args . VIRGULE un_arg

    VIRGULE              shift, and go to state 123
    PARENTHESE_FERMANTE  shift, and go to state 124


State 79

   49 liste_args: un_arg .

    $default  reduce using rule 49 (liste_args)


State 80

   51 un_arg: expression .

    $default  reduce using rule 51 (un_arg)


State 81

   52 condition: SI expression ALORS . liste_instructions SINON liste_instructions

    DEBUT  shift, and go to state 3

    liste_instructions  go to state 125


State 82

   53 tant_que: TANT_QUE expression FAIRE . liste_instructions

    DEBUT  shift, and go to state 3

    liste_instructions  go to state 126


State 83

    8 suite_liste_inst: suite_liste_inst POINT_VIRGULE instruction .

    $default  reduce using rule 8 (suite_liste_inst)


State 84

   54 affectation: variable OPAFF expression .

    $default  reduce using rule 54 (affectation)


State 85

   24 nom_type: IDF .

    $default  reduce using rule 24 (nom_type)


State 86

   25 type_simple: ENTIER .

    $default  reduce using rule 25 (type_simple)


State 87

   26 type_simple: REEL .

    $default  reduce using rule 26 (type_simple)


State 88

   27 type_simple: BOOLEEN .

    $default  reduce using rule 27 (type_simple)


State 89

   28 type_simple: CARACTERE .

    $default  reduce using rule 28 (type_simple)


State 90

   29 type_simple: CHAINE . CROCHET_OUVRANT CSTE_ENTIERE CROCHET_FERMANT

    CROCHET_OUVRANT  shift, and go to state 127


State 91

   30 declaration_variable: VARIABLE IDF DEUX_POINTS nom_type .

    $default  reduce using rule 30 (declaration_variable)


State 92

   23 nom_type: type_simple .

    $default  reduce using rule 23 (nom_type)


State 93

   37 un_param: IDF . DEUX_POINTS type_simple

    DEUX_POINTS  shift, and go to state 128


State 94

   34 liste_parametres: PARENTHESE_OUVRANTE liste_param . PARENTHESE_FERMANTE
   36 liste_param: liste_param . POINT_VIRGULE un_param

    POINT_VIRGULE        shift, and go to state 129
    PARENTHESE_FERMANTE  shift, and go to state 130


State 95

   35 liste_param: un_param .

    $default  reduce using rule 35 (liste_param)


State 96

   31 declaration_procedure: PROCEDURE IDF liste_parametres corps .

    $default  reduce using rule 31 (declaration_procedure)


State 97

   32 declaration_fonction: FONCTION IDF liste_parametres RETOURNE . type_simple corps

    ENTIER     shift, and go to state 86
    REEL       shift, and go to state 87
    BOOLEEN    shift, and go to state 88
    CARACTERE  shift, and go to state 89
    CHAINE     shift, and go to state 90

    type_simple  go to state 131


State 98

   14 suite_declaration_type: STRUCT . liste_champs FSTRUCT

    IDF  shift, and go to state 132

    liste_champs  go to state 133
    un_champ      go to state 134


State 99

   15 suite_declaration_type: TABLEAU . dimension DE nom_type

    CROCHET_OUVRANT  shift, and go to state 135

    dimension  go to state 136


State 100

   13 declaration_type: TYPE IDF DEUX_POINTS suite_declaration_type .

    $default  reduce using rule 13 (declaration_type)


State 101

   68 expression: ENTIER DIFF ENTIER .

    $default  reduce using rule 68 (expression)


State 102

   67 expression: ENTIER DIV ENTIER .

    $default  reduce using rule 67 (expression)


State 103

   74 expression: ENTIER EGAL ENTIER .

    $default  reduce using rule 74 (expression)


State 104

   77 expression: ENTIER INFERIEUR ENTIER .

    $default  reduce using rule 77 (expression)


State 105

   75 expression: ENTIER INF_EGAL ENTIER .

    $default  reduce using rule 75 (expression)


State 106

   65 expression: ENTIER MOINS ENTIER .

    $default  reduce using rule 65 (expression)


State 107

   66 expression: ENTIER MULT ENTIER .

    $default  reduce using rule 66 (expression)


State 108

   64 expression: ENTIER PLUS ENTIER .

    $default  reduce using rule 64 (expression)


State 109

   78 expression: ENTIER SUPERIEUR ENTIER .

    $default  reduce using rule 78 (expression)


State 110

   76 expression: ENTIER SUP_EGAL ENTIER .

    $default  reduce using rule 76 (expression)


State 111

   73 expression: REEL DIFF REEL .

    $default  reduce using rule 73 (expression)


State 112

   72 expression: REEL DIV REEL .

    $default  reduce using rule 72 (expression)


State 113

   79 expression: REEL EGAL REEL .

    $default  reduce using rule 79 (expression)


State 114

   82 expression: REEL INFERIEUR REEL .

    $default  reduce using rule 82 (expression)


State 115

   80 expression: REEL INF_EGAL REEL .

    $default  reduce using rule 80 (expression)


State 116

   70 expression: REEL MOINS REEL .

    $default  reduce using rule 70 (expression)


State 117

   71 expression: REEL MULT REEL .

    $default  reduce using rule 71 (expression)


State 118

   69 expression: REEL PLUS REEL .

    $default  reduce using rule 69 (expression)


State 119

   83 expression: REEL SUPERIEUR REEL .

    $default  reduce using rule 83 (expression)


State 120

   81 expression: REEL SUP_EGAL REEL .

    $default  reduce using rule 81 (expression)


State 121

   63 expression: CHAINE PLUS CHAINE .

    $default  reduce using rule 63 (expression)


State 122

   56 variable: IDF CROCHET_OUVRANT expression CROCHET_FERMANT .

    $default  reduce using rule 56 (variable)


State 123

   50 liste_args: liste_args VIRGULE . un_arg

    IDF        shift, and go to state 35
    ENTIER     shift, and go to state 36
    REEL       shift, and go to state 37
    CARACTERE  shift, and go to state 38
    CHAINE     shift, and go to state 39

    $default  reduce using rule 57 (expression)

    un_arg      go to state 137
    expression  go to state 80


State 124

   48 liste_arguments: PARENTHESE_OUVRANTE liste_args PARENTHESE_FERMANTE .

    $default  reduce using rule 48 (liste_arguments)


State 125

   52 condition: SI expression ALORS liste_instructions . SINON liste_instructions

    SINON  shift, and go to state 138


State 126

   53 tant_que: TANT_QUE expression FAIRE liste_instructions .

    $default  reduce using rule 53 (tant_que)


State 127

   29 type_simple: CHAINE CROCHET_OUVRANT . CSTE_ENTIERE CROCHET_FERMANT

    CSTE_ENTIERE  shift, and go to state 139


State 128

   37 un_param: IDF DEUX_POINTS . type_simple

    ENTIER     shift, and go to state 86
    REEL       shift, and go to state 87
    BOOLEEN    shift, and go to state 88
    CARACTERE  shift, and go to state 89
    CHAINE     shift, and go to state 90

    type_simple  go to state 140


State 129

   36 liste_param: liste_param POINT_VIRGULE . un_param

    IDF  shift, and go to state 93

    un_param  go to state 141


State 130

   34 liste_parametres: PARENTHESE_OUVRANTE liste_param PARENTHESE_FERMANTE .

    $default  reduce using rule 34 (liste_parametres)


State 131

   32 declaration_fonction: FONCTION IDF liste_parametres RETOURNE type_simple . corps

    DEBUT      shift, and go to state 3
    VARIABLE   shift, and go to state 4
    PROCEDURE  shift, and go to state 5
    FONCTION   shift, and go to state 6
    TYPE       shift, and go to state 7

    corps                  go to state 142
    liste_declarations     go to state 9
    liste_instructions     go to state 10
    declaration            go to state 11
    declaration_type       go to state 12
    declaration_variable   go to state 13
    declaration_procedure  go to state 14
    declaration_fonction   go to state 15


State 132

   22 un_champ: IDF . DEUX_POINTS nom_type

    DEUX_POINTS  shift, and go to state 143


State 133

   14 suite_declaration_type: STRUCT liste_champs . FSTRUCT
   21 liste_champs: liste_champs . POINT_VIRGULE un_champ

    FSTRUCT        shift, and go to state 144
    POINT_VIRGULE  shift, and go to state 145


State 134

   20 liste_champs: un_champ .

    $default  reduce using rule 20 (liste_champs)


State 135

   16 dimension: CROCHET_OUVRANT . liste_dimensions CROCHET_FERMANT

    IDF        shift, and go to state 35
    ENTIER     shift, and go to state 36
    REEL       shift, and go to state 37
    CARACTERE  shift, and go to state 38
    CHAINE     shift, and go to state 39

    $default  reduce using rule 57 (expression)

    liste_dimensions  go to state 146
    une_dimension     go to state 147
    expression        go to state 148


State 136

   15 suite_declaration_type: TABLEAU dimension . DE nom_type

    DE  shift, and go to state 149


State 137

   50 liste_args: liste_args VIRGULE un_arg .

    $default  reduce using rule 50 (liste_args)


State 138

   52 condition: SI expression ALORS liste_instructions SINON . liste_instructions

    DEBUT  shift, and go to state 3

    liste_instructions  go to state 150


State 139

   29 type_simple: CHAINE CROCHET_OUVRANT CSTE_ENTIERE . CROCHET_FERMANT

    CROCHET_FERMANT  shift, and go to state 151


State 140

   37 un_param: IDF DEUX_POINTS type_simple .

    $default  reduce using rule 37 (un_param)


State 141

   36 liste_param: liste_param POINT_VIRGULE un_param .

    $default  reduce using rule 36 (liste_param)


State 142

   32 declaration_fonction: FONCTION IDF liste_parametres RETOURNE type_simple corps .

    $default  reduce using rule 32 (declaration_fonction)


State 143

   22 un_champ: IDF DEUX_POINTS . nom_type

    IDF        shift, and go to state 85
    ENTIER     shift, and go to state 86
    REEL       shift, and go to state 87
    BOOLEEN    shift, and go to state 88
    CARACTERE  shift, and go to state 89
    CHAINE     shift, and go to state 90

    nom_type     go to state 152
    type_simple  go to state 92


State 144

   14 suite_declaration_type: STRUCT liste_champs FSTRUCT .

    $default  reduce using rule 14 (suite_declaration_type)


State 145

   21 liste_champs: liste_champs POINT_VIRGULE . un_champ

    IDF  shift, and go to state 132

    un_champ  go to state 153


State 146

   16 dimension: CROCHET_OUVRANT liste_dimensions . CROCHET_FERMANT
   18 liste_dimensions: liste_dimensions . VIRGULE une_dimension

    CROCHET_FERMANT  shift, and go to state 154
    VIRGULE          shift, and go to state 155


State 147

   17 liste_dimensions: une_dimension .

    $default  reduce using rule 17 (liste_dimensions)


State 148

   19 une_dimension: expression . POINT POINT expression

    POINT  shift, and go to state 156


State 149

   15 suite_declaration_type: TABLEAU dimension DE . nom_type

    IDF        shift, and go to state 85
    ENTIER     shift, and go to state 86
    REEL       shift, and go to state 87
    BOOLEEN    shift, and go to state 88
    CARACTERE  shift, and go to state 89
    CHAINE     shift, and go to state 90

    nom_type     go to state 157
    type_simple  go to state 92


State 150

   52 condition: SI expression ALORS liste_instructions SINON liste_instructions .

    $default  reduce using rule 52 (condition)


State 151

   29 type_simple: CHAINE CROCHET_OUVRANT CSTE_ENTIERE CROCHET_FERMANT .

    $default  reduce using rule 29 (type_simple)


State 152

   22 un_champ: IDF DEUX_POINTS nom_type .

    $default  reduce using rule 22 (un_champ)


State 153

   21 liste_champs: liste_champs POINT_VIRGULE un_champ .

    $default  reduce using rule 21 (liste_champs)


State 154

   16 dimension: CROCHET_OUVRANT liste_dimensions CROCHET_FERMANT .

    $default  reduce using rule 16 (dimension)


State 155

   18 liste_dimensions: liste_dimensions VIRGULE . une_dimension

    IDF        shift, and go to state 35
    ENTIER     shift, and go to state 36
    REEL       shift, and go to state 37
    CARACTERE  shift, and go to state 38
    CHAINE     shift, and go to state 39

    $default  reduce using rule 57 (expression)

    une_dimension  go to state 158
    expression     go to state 148


State 156

   19 une_dimension: expression POINT . POINT expression

    POINT  shift, and go to state 159


State 157

   15 suite_declaration_type: TABLEAU dimension DE nom_type .

    $default  reduce using rule 15 (suite_declaration_type)


State 158

   18 liste_dimensions: liste_dimensions VIRGULE une_dimension .

    $default  reduce using rule 18 (liste_dimensions)


State 159

   19 une_dimension: expression POINT POINT . expression

    IDF        shift, and go to state 35
    ENTIER     shift, and go to state 36
    REEL       shift, and go to state 37
    CARACTERE  shift, and go to state 38
    CHAINE     shift, and go to state 39

    $default  reduce using rule 57 (expression)

    expression  go to state 160


State 160

   19 une_dimension: expression POINT POINT expression .

    $default  reduce using rule 19 (une_dimension)
